{"version":3,"sources":["logo.svg","components/Degrees.js","components/SearchBox.js","components/Navbar.js","utils/utils.js","components/Today.js","components/SingleListItem.js","components/List.js","components/Graph.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Degrees","changeUnit","e","newUnit","target","textContent","_this","props","onUnitChange","react_default","a","createElement","className","concat","this","unit","onClick","Component","SearchBox","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleQueryStringChange","setState","query","value","handleSearch","preventDefault","console","log","state","onSearchSubmit","classes","onSubmit","margin","Grid_default","container","spacing","alignItems","item","AccountCircle_default","TextField_default","id","label","root","InputProps","input","InputLabelProps","style","color","onChange","class","cursor","withStyles","theme","boxyhadow","Navbar","sendNewUnitToParent","sendQueryStringToParent","components_SearchBox","data","city","Degrees_Degrees","yellow","gray","getIconClassName","weatherId","hasWeatherId","idArray","indexOf","Today","_this$props$data","day","date","description","mainTemperature","minTemperature","maxTemperature","pressure","humidity","windSpeed","uvIndex","iconClass","SingleListItem","sendIndex","onIndexChange","listId","List","sendIndexToParent","newIndex","onIndexForTodayChange","_this2","i","items","map","singleDayData","SingleListItem_SingleListItem","key","Graph","build","App","indexForToday","notifyStateChange","queryString","latLng","hasLatLng","length","hasCityOrZipcode","fetchWeatherForecast","then","forecastData","navbarData","extractDataForNavbar","_this$extractDataForL","extractDataForListAndGraphComponent","listComponentData","graphComponentData","todayComponentData","extractDataForTodayComponent","lat","coord","lon","fetchUVIndex","uvIndexData","catch","error","queryParams","unitType","url","axios","get","response","name","country","todayForecast","list","time","Date","dt","getDay","getMonth","getDate","getFullYear","weather","split","elem","toUpperCase","slice","join","toString","getHours","main","temp","Math","round","temp_min","temp_max","wind","speed","monthNames","forEach","forecast","push","geolocation","navigator","getCurrentPosition","position","coords","latitude","longitude","Navbar_Navbar","Today_Today","List_List","Graph_Graph","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd9d00cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport \"../styles/Degrees.css\";\r\nexport default class Degrees extends Component {\r\n  changeUnit = e => {\r\n    const newUnit = e.target.textContent;\r\n    this.props.onUnitChange(newUnit);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"degrees-container\">\r\n        <div\r\n          className={`degrees-item ${this.props.unit === \"K\" ? \"active\" : \"\"}`}\r\n          onClick={this.changeUnit}\r\n        >\r\n          <span>K</span>\r\n        </div>\r\n        <div\r\n          className={`degrees-item ${this.props.unit === \"C\" ? \"active\" : \"\"}`}\r\n          onClick={this.changeUnit}\r\n        >\r\n          <span>C</span>\r\n        </div>\r\n        <div\r\n          className={`degrees-item ${this.props.unit === \"F\" ? \"active\" : \"\"}`}\r\n          onClick={this.changeUnit}\r\n        >\r\n          <span>F</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst styles = theme => ({\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n    color: \"white\"\r\n  },\r\n  root: {\r\n    color: \"white\"\r\n  },\r\n  input: {\r\n    color: \"white\",\r\n    boxyhadow: \"0 4px 2px -2px gray\"\r\n  }\r\n});\r\n\r\nclass SearchBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\"\r\n    };\r\n  }\r\n\r\n  handleQueryStringChange = e => {\r\n    this.setState({\r\n      query: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n    console.log(\"Fetch weather data for:\", this.state.query);\r\n    this.props.onSearchSubmit(this.state.query);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSearch}>\r\n          <div className={classes.margin}>\r\n            <Grid container spacing={8} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <AccountCircle />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  id=\"input-with-icon-grid\"\r\n                  label=\"Enter a city\"\r\n                  className={classes.root}\r\n                  InputProps={{ className: classes.input }}\r\n                  InputLabelProps={{\r\n                    style: {\r\n                      color: \"white\"\r\n                    }\r\n                  }}\r\n                  value={this.state.query}\r\n                  onChange={this.handleQueryStringChange}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <i\r\n                  class=\"fas fa-search\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.handleSearch}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBox.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SearchBox);\r\n","import React, { Component } from \"react\";\r\nimport Degrees from \"./Degrees\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport \"../styles/Navbar.css\";\r\nexport default class Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  sendNewUnitToParent = newUnit => {\r\n    this.props.onUnitChange(newUnit);\r\n  };\r\n\r\n  sendQueryStringToParent = query => {\r\n    this.props.onSearchSubmit(query);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"navbar-container\">\r\n          <li className=\"navbar-item\">\r\n            <SearchBox onSearchSubmit={this.sendQueryStringToParent} />\r\n          </li>\r\n          <li className=\"navbar-item city-name\">\r\n            <p>{this.props.data.city}</p>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n            <Degrees\r\n              unit={this.props.unit}\r\n              onUnitChange={this.sendNewUnitToParent}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const blue = [\r\n  300,\r\n  301,\r\n  302,\r\n  310,\r\n  311,\r\n  313,\r\n  314,\r\n  321,\r\n  500,\r\n  501,\r\n  502,\r\n  503,\r\n  504,\r\n  511,\r\n  520,\r\n  521,\r\n  522,\r\n  531,\r\n  611,\r\n  612,\r\n  615,\r\n  616,\r\n  620,\r\n  701\r\n];\r\nconst yellow = [210, 211, 212, 221, 731, 761, 762, 800];\r\nconst gray = [\r\n  200,\r\n  201,\r\n  202,\r\n  230,\r\n  231,\r\n  232,\r\n  600,\r\n  601,\r\n  602,\r\n  621,\r\n  622,\r\n  711,\r\n  721,\r\n  741,\r\n  771,\r\n  781,\r\n  801,\r\n  802,\r\n  803,\r\n  804\r\n];\r\n\r\nconst CLASS_BLUE = \"wi-blue\";\r\nconst CLASS_YELLOW = \"wi-yellow\";\r\nconst CLASS_GRAY = \"wi-gray\";\r\n\r\nexport const getIconClassName = weatherId => {\r\n  const hasWeatherId = (idArray, id) => idArray.indexOf(id) > -1;\r\n  if (hasWeatherId(yellow, weatherId)) return CLASS_YELLOW;\r\n  else if (hasWeatherId(gray, weatherId)) return CLASS_GRAY;\r\n  else return CLASS_BLUE;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Today.css\";\r\nimport { getIconClassName } from \"../utils/utils\";\r\nexport default class Today extends Component {\r\n  // {\r\n  //     day,\r\n  //     date,\r\n  //     weatherId,\r\n  //     description,\r\n  //     mainTemperature,\r\n  //     minTemperature,\r\n  //     maxTemperature,\r\n  //     pressure,\r\n  //     humidity,\r\n  //     windSpeed\r\n  //   } in this.props.data\r\n\r\n  //\"string\" in this.props.unit\r\n\r\n  render() {\r\n    const {\r\n      day,\r\n      date,\r\n      weatherId,\r\n      description,\r\n      mainTemperature,\r\n      minTemperature,\r\n      maxTemperature,\r\n      pressure,\r\n      humidity,\r\n      windSpeed\r\n    } = this.props.data;\r\n\r\n    const { unit } = this.props;\r\n    const { uvIndex } = this.props;\r\n    const iconClass = getIconClassName(weatherId);\r\n    return (\r\n      <div className=\"today-container\">\r\n        <div className=\"date-container\">\r\n          <div>{day}</div>\r\n          <div>{date}</div>\r\n        </div>\r\n        <div className=\"icon-desc-container\">\r\n          <div className=\"icon-container\">\r\n            <i className={`wi wi-owm-${weatherId} weather-icon ${iconClass}`} />\r\n          </div>\r\n          <div className=\"weather-desc\">{description}</div>\r\n        </div>\r\n        <div className=\"temp-container\">\r\n          <div className=\"temp-text\">\r\n            <span>{mainTemperature}</span>\r\n            <i className=\"wi wi-degrees\" />\r\n          </div>\r\n          <div className=\"high-low-container\">\r\n            <div className=\"high-low-item\">\r\n              <span>\r\n                <i className=\"wi wi-direction-up\" />\r\n              </span>\r\n              <span>Max</span>\r\n              <span>\r\n                <span>{maxTemperature}&#x00B0;</span>\r\n              </span>\r\n            </div>\r\n            <div className=\"high-low-item\">\r\n              <span>\r\n                <i className=\"wi wi-direction-down\" />\r\n              </span>\r\n              <span>Min</span>\r\n              <span>\r\n                <span>{minTemperature}&#x00B0;</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"extra-info-container\">\r\n          <div className=\"extra-info-item\">\r\n            <span>\r\n              <i className=\"wi wi-humidity\" />\r\n            </span>\r\n            <span>Humidity:</span>\r\n            <span>{humidity} %</span>\r\n          </div>\r\n          <div className=\"extra-info-item\">\r\n            <span>\r\n              <i className=\"wi wi-barometer\" />\r\n            </span>\r\n            <span>Pressure:</span>\r\n            <span>{pressure} hPa</span>\r\n          </div>\r\n          <div className=\"extra-info-item\">\r\n            <span>\r\n              <i className=\"wi wi-strong-wind\" />\r\n            </span>\r\n            <span>Wind Speed:</span>\r\n            <span>\r\n              {windSpeed} {unit === \"F\" ? \"miles/hr\" : \"m/s\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"extra-info-item\">\r\n            <span>\r\n              <i className=\"wi wi-sunset\" />\r\n            </span>\r\n            <span>UV Index:</span>\r\n            <span>{uvIndex}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getIconClassName } from \"../utils/utils\";\r\n\r\nexport default class SingleListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  sendIndex = () => {\r\n    this.props.onIndexChange(this.props.listId);\r\n  };\r\n  render() {\r\n    const {\r\n      date,\r\n      pressure,\r\n      humidity,\r\n      day,\r\n      weatherId,\r\n      description,\r\n      mainTemperature\r\n      // pressure,\r\n      // humidity\r\n    } = this.props.data;\r\n    const iconClass = getIconClassName(weatherId);\r\n    return (\r\n      <div className=\"single-list-item\" onClick={this.sendIndex}>\r\n        <div className=\"li-info-container\">\r\n          <div className=\"li-day\">{day}</div>\r\n          <div className=\"li-day\">{date}</div>\r\n          <div className=\"li-temp-text\">{mainTemperature}&#x00B0;</div>\r\n          <div className=\"li-desc\">{description}</div>\r\n          {/* <div className=\"li-desc\">{pressure}</div>\r\n            <div className=\"li-desc\">{humidity}</div> */}\r\n        </div>\r\n        <div className=\"li-weather-icon\">\r\n          <i className={`wi wi-owm-${weatherId} ${iconClass}`} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SingleListItem from \"./SingleListItem\";\r\nimport \"../styles/List.css\";\r\n\r\nexport default class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  sendIndexToParent = newIndex => {\r\n    this.props.onIndexForTodayChange(newIndex);\r\n  };\r\n\r\n  render() {\r\n    let i = 0;\r\n    const items = this.props.data.map(singleDayData => {\r\n      i++;\r\n      return (\r\n        <SingleListItem\r\n          key={singleDayData.day}\r\n          data={singleDayData}\r\n          listId={i - 1}\r\n          onIndexChange={this.sendIndexToParent}\r\n        />\r\n      );\r\n    });\r\n    return <div className=\"list-container\">{items}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\r\nimport \"../styles/Graph.css\";\r\nexport default class Graph extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"graph-container\">\r\n        <div className=\"graph-info\">\r\n          <span>Temperature variation over 7 days</span>\r\n        </div>\r\n        <div className=\"graph\">\r\n          <Sparklines data={this.props.data}>\r\n            <SparklinesLine color=\"white\" />\r\n          </Sparklines>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Today from \"./components/Today\";\r\nimport List from \"./components/List\";\r\nimport Graph from \"./components/Graph\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\nconst monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n];\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unit: \"C\",\r\n      queryString: \"\",\r\n      latLng: [],\r\n      navbarData: {},\r\n      todayComponentData: {},\r\n      listComponentData: [],\r\n      graphComponentData: [],\r\n      lat: \"\",\r\n      lon: \"\",\r\n      uvIndex: null,\r\n      indexForToday: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const geolocation = navigator.geolocation;\r\n    if (geolocation) {\r\n      geolocation.getCurrentPosition(\r\n        position => {\r\n          this.setState(\r\n            {\r\n              latLng: [position.coords.latitude, position.coords.longitude]\r\n            },\r\n            this.notifyStateChange\r\n          );\r\n        },\r\n        () => {\r\n          console.log(\"Permission Denied\");\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"GeoLocation not supported...Update the browser fella\");\r\n    }\r\n  }\r\n  onIndexForTodayChange = newIndex => {\r\n    this.setState(\r\n      {\r\n        indexForToday: newIndex\r\n      },\r\n      function() {\r\n        this.notifyStateChange();\r\n      }\r\n    );\r\n  };\r\n\r\n  onUnitChange = newUnit => {\r\n    this.setState(\r\n      {\r\n        unit: newUnit\r\n      },\r\n      this.notifyStateChange\r\n    );\r\n    console.log(newUnit);\r\n  };\r\n\r\n  onSearchSubmit = query => {\r\n    this.setState(\r\n      {\r\n        queryString: query,\r\n        latLng: []\r\n      },\r\n      this.notifyStateChange\r\n    );\r\n  };\r\n\r\n  notifyStateChange = () => {\r\n    const hasLatLng = this.state.latLng.length > 0;\r\n    const hasCityOrZipcode = this.state.queryString !== \"\";\r\n\r\n    if (hasLatLng || hasCityOrZipcode) {\r\n      this.fetchWeatherForecast(hasLatLng)\r\n        .then(forecastData => {\r\n          console.log(\"Forecast Data:\", forecastData);\r\n\r\n          const navbarData = this.extractDataForNavbar(forecastData);\r\n          const {\r\n            listComponentData,\r\n            graphComponentData\r\n          } = this.extractDataForListAndGraphComponent(forecastData);\r\n          const todayComponentData = this.extractDataForTodayComponent(\r\n            forecastData\r\n          );\r\n\r\n          this.setState({\r\n            navbarData,\r\n            todayComponentData,\r\n            listComponentData,\r\n            graphComponentData,\r\n            lat: forecastData.city.coord.lat,\r\n            lon: forecastData.city.coord.lon\r\n          });\r\n        })\r\n        .then(() => {\r\n          this.fetchUVIndex(hasLatLng)\r\n            .then(uvIndexData => {\r\n              console.log(\"This is UV index data\", uvIndexData);\r\n              if (this.state.indexForToday != 0) {\r\n                this.setState({\r\n                  uvIndex: uvIndexData[this.state.indexForToday - 1].value\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  uvIndex: uvIndexData.value\r\n                });\r\n              }\r\n            })\r\n            .catch(() => {});\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Error:\", error);\r\n          //TODO: Show message in the browser here\r\n        });\r\n    }\r\n  };\r\n\r\n  fetchWeatherForecast = hasLatLng => {\r\n    const API_KEY = \"f52e83dffc7d0cf73311fcb22abfab18\";\r\n    const BASE_URL = \"https://api.openweathermap.org/data/2.5/forecast\";\r\n    // const BASE_URL = \"https://api.openweathermap.org/data/2.5/forecast/daily\";\r\n\r\n    const queryParams = hasLatLng\r\n      ? `lat=${this.state.latLng[0]}&lon=${this.state.latLng[1]}`\r\n      : `q=${this.state.queryString}`;\r\n    const unitType =\r\n      this.state.unit === \"C\"\r\n        ? \"metric\"\r\n        : this.state.unit === \"F\"\r\n        ? \"imperial\"\r\n        : \"standard\";\r\n\r\n    const url = `${BASE_URL}?${queryParams}&units=${unitType}&cnt=40&appid=${API_KEY}`;\r\n\r\n    return axios\r\n      .get(url)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error:\", error);\r\n        //TODO: Show message in the browser here\r\n      });\r\n  };\r\n\r\n  fetchUVIndex = hasLatLng => {\r\n    const API_KEY = \"f52e83dffc7d0cf73311fcb22abfab18\";\r\n    let url = \"\";\r\n    if (this.state.indexForToday == 0) {\r\n      const API_KEY = \"f52e83dffc7d0cf73311fcb22abfab18\";\r\n      const BASE_URL = \"https://api.openweathermap.org/data/2.5/uvi\";\r\n      const queryParams = hasLatLng\r\n        ? `lat=${this.state.latLng[0]}&lon=${this.state.latLng[1]}`\r\n        : `lat=${this.state.lat}&lon=${this.state.lon}`;\r\n      url = `${BASE_URL}?${queryParams}&appid=${API_KEY}`;\r\n    } else {\r\n      const BASE_URL = \"https://api.openweathermap.org/data/2.5/uvi/forecast\";\r\n      const queryParams = hasLatLng\r\n        ? `lat=${this.state.latLng[0]}&lon=${this.state.latLng[1]}`\r\n        : `lat=${this.state.lat}&lon=${this.state.lon}`;\r\n      url = `${BASE_URL}?${queryParams}&appid=${API_KEY}&cnt=4`;\r\n    }\r\n\r\n    return axios\r\n      .get(url)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error:\", error);\r\n        //TODO: Show message in the browser here\r\n      });\r\n  };\r\n\r\n  extractDataForNavbar = forecastData => {\r\n    return {\r\n      city: `${forecastData.city.name}, ${forecastData.city.country}`\r\n    };\r\n  };\r\n\r\n  extractDataForTodayComponent = forecastData => {\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    console.log(\"This is forecast data for today component\", forecastData);\r\n    let newIndex =\r\n      this.state.indexForToday == 5 ? 39 : this.state.indexForToday * 8;\r\n    const todayForecast = forecastData.list[newIndex];\r\n    // const todayForecast = this.state.listComponentData[\r\n    //   this.state.indexForToday\r\n    // ];\r\n    console.log(todayForecast);\r\n    const time = new Date(todayForecast.dt * 1000);\r\n    const day = this.getDay(time);\r\n    const date = `${\r\n      monthNames[time.getMonth()]\r\n    } ${time.getDate()}, ${time.getFullYear()}`;\r\n\r\n    const weatherId = todayForecast.weather[0].id;\r\n    let description = todayForecast.weather[0].description;\r\n    description = description\r\n      .split(\" \")\r\n      .map(elem => elem[0].toUpperCase() + elem.slice(1))\r\n      .join(\" \")\r\n      .toString();\r\n    const hours = new Date().getHours();\r\n\r\n    let mainTemperature = todayForecast.main.temp;\r\n    mainTemperature = Math.round(mainTemperature);\r\n    const minTemperature = Math.round(todayForecast.main.temp_min);\r\n    const maxTemperature = Math.round(todayForecast.main.temp_max);\r\n    const pressure = todayForecast.main.pressure;\r\n    const humidity = todayForecast.main.humidity;\r\n    const windSpeed = todayForecast.wind.speed;\r\n    const result = {\r\n      day,\r\n      date,\r\n      weatherId,\r\n      description,\r\n      mainTemperature,\r\n      minTemperature,\r\n      maxTemperature,\r\n      pressure,\r\n      humidity,\r\n      windSpeed\r\n    };\r\n    // console.log(result);\r\n    return result;\r\n  };\r\n\r\n  extractDataForListAndGraphComponent = forecastData => {\r\n    console.log(forecastData);\r\n    const listComponentData = [];\r\n    const graphComponentData = [];\r\n    const monthNames = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    forecastData.list.forEach(forecast => {\r\n      if (\r\n        forecastData.list.indexOf(forecast) % 8 == 0 ||\r\n        forecastData.list.indexOf(forecast) == forecastData.list.length - 1\r\n      ) {\r\n        let item = {};\r\n        item.day = this.getDay(forecast.dt * 1000);\r\n        let time = new Date(forecast.dt * 1000);\r\n        item.date = `${\r\n          monthNames[time.getMonth()]\r\n        } ${time.getDate()}, ${time.getFullYear()}`;\r\n        item.weatherId = forecast.weather[0].id;\r\n        item.description = forecast.weather[0].description;\r\n        item.mainTemperature = Math.round(forecast.main.temp);\r\n        item.pressure = forecast.main.pressure;\r\n        item.humidity = forecast.main.humidity;\r\n        listComponentData.push(item);\r\n        graphComponentData.push(item.mainTemperature);\r\n      }\r\n    });\r\n\r\n    console.log(listComponentData);\r\n    return {\r\n      listComponentData,\r\n      graphComponentData\r\n    };\r\n  };\r\n\r\n  // Takes date object or unix timestamp in ms and returns day string\r\n  getDay = time => {\r\n    const dayNames = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\"\r\n    ];\r\n    return dayNames[new Date(time).getDay()];\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Navbar\r\n          data={this.state.navbarData}\r\n          onUnitChange={this.onUnitChange}\r\n          onSearchSubmit={this.onSearchSubmit}\r\n          unit={this.state.unit}\r\n        />\r\n        <Today\r\n          data={this.state.todayComponentData}\r\n          unit={this.state.unit}\r\n          uvIndex={this.state.uvIndex}\r\n        />\r\n        <div className=\"app-list-graph\">\r\n          <List\r\n            data={this.state.listComponentData}\r\n            onIndexForTodayChange={this.onIndexForTodayChange}\r\n          />\r\n          <Graph data={this.state.graphComponentData} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}